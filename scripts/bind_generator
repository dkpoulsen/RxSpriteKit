#!/usr/bin/env ruby
require 'yaml'
require 'erb'

BASE_DIR = File.absolute_path(File.join(File.dirname(__FILE__), "../"))
CONFIG_PATH = File.join(BASE_DIR, "scripts", "config", "binder.yml")
TEMPLATE_PATH = File.join(BASE_DIR, "scripts", "templates", "Binder.swift.erb")
OUTPUT_DIR_PATH = File.join(BASE_DIR, "RxSpriteKit", "Binders")

config = YAML.load_file(CONFIG_PATH)

HEADERS = {
  SK3DNode: %w{SceneKit},
  SKAudioNode: %w{AVFoundation},
}

SwiftProperty = Struct.new(:name, :type)

class SwiftClass
  attr_reader :name, :properties

  def initialize(name, properties)
    @name = name
    @properties = properties.map { |name, type| SwiftProperty.new(name, type) }.sort { |a, b| a.name <=> b.name }
  end
end

classes = config.map { |name, properties| SwiftClass.new(name, properties) }

classes.each do |swift_class|
  class_name = swift_class.name
  properties = swift_class.properties
  headers = HEADERS[class_name.to_sym] || []
  source_code = ERB.new(File.read(TEMPLATE_PATH)).result(binding)
  file_name = "#{class_name}+Binder.swift"
  File.open(File.join(OUTPUT_DIR_PATH, file_name), "w+").write(source_code)
  puts "#{file_name} is saved."
end
